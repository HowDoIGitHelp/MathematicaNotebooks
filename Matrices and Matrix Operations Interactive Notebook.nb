(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    329451,       6902]
NotebookOptionsPosition[    320543,       6752]
NotebookOutlinePosition[    320884,       6767]
CellTagsIndexPosition[    320841,       6764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to Linear Algebra", "Title",
 CellChangeTimes->{{3.813583830253538*^9, 3.8135839126708183`*^9}, {
  3.8135839471187706`*^9, 3.813583951616753*^9}, {3.813585289811228*^9, 
  3.813585290590845*^9}},ExpressionUUID->"0a470bca-ec75-42d8-9ccc-\
1ca90d6041b6"],

Cell["Matrices and Matrix Operations", "Subtitle",
 CellChangeTimes->{{3.813583830253538*^9, 3.8135839126708183`*^9}, {
  3.8135839471187706`*^9, 3.8135839599584618`*^9}, {3.813585282840054*^9, 
  3.813585285717021*^9}},ExpressionUUID->"cf8c79f0-c5b4-43a9-8484-\
9917d4f52bb0"],

Cell[TextData[StyleBox["A 2 x 3 matrix:", "Text"]], "Text",
 CellChangeTimes->{{3.813583830253538*^9, 3.8135839126708183`*^9}, {
  3.8135839471187706`*^9, 3.8135839618863115`*^9}, {3.8135840799369555`*^9, 
  3.8135840910233335`*^9}, {3.8135844290830374`*^9, 3.8135844313629427`*^9}},
 FormatType->
  "TextForm",ExpressionUUID->"ca2435d6-d63f-45b1-8ee0-491bf56b8bd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", GridBox[{
     {"4", "2", 
      RowBox[{"-", "3"}]},
     {"11", "\[Pi]", "12"}
    }]}], ";"}]], "Input",
 CellChangeTimes->{{3.813583981653523*^9, 3.813584065398803*^9}, 
   3.8135844382525487`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"e0236693-0af7-49fb-9555-fb5ae2c35804"],

Cell["A 4 x 1 matrix:", "Text",
 CellChangeTimes->{{3.813584452464572*^9, 
  3.813584470767243*^9}},ExpressionUUID->"c46f25d3-69a8-44fe-a87d-\
a110eb88768c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", " ", "=", " ", GridBox[{
     {"1"},
     {"34"},
     {
      RowBox[{"-", "12"}]},
     {"0"}
    }]}], ";"}]], "Input",
 CellChangeTimes->{{3.813584478931427*^9, 3.813584494601556*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"d4de36ca-9bf9-49f3-b85d-7bc8384b13a9"],

Cell["\<\
A gray scale image defined using a matrix of pixel brightness values\
\>", "Text",
 CellChangeTimes->{{3.813584522994322*^9, 
  3.8135845427595115`*^9}},ExpressionUUID->"2ca12b40-bb18-43dd-8643-\
6effd24f0f9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  TagBox[
   TagBox[
    RowBox[{"(", GridBox[{
       {"0.1", "0.9", "0.3"},
       {"0.4", "0.5", "0.6"},
       {"0.7", "0.7", "0.9"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
        "ItemsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
        "ItemsIndexed" -> {}}], ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"43096d7c-001d-45e8-af6a-75a8707b6d98"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[
    RawArray["Real32",{{0.10000000149011612`, 0.8999999761581421, 
     0.30000001192092896`}, {0.4000000059604645, 0.5, 0.6000000238418579}, {
     0.699999988079071, 0.699999988079071, 0.8999999761581421}}], {{0, 3}, {3,
     0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{3, 3},
  PlotRange->{{0, 3}, {0, 3}}]], "Output",
 CellChangeTimes->{3.8135845178071814`*^9, 3.813739088177537*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"7796b4e4-9eac-4742-9241-45006fe2a315"]
}, Open  ]],

Cell["\<\
A colored image defined using a matrix of rgb brightness values\
\>", "Text",
 CellChangeTimes->{{3.8135845768848915`*^9, 
  3.8135845965559244`*^9}},ExpressionUUID->"88b2cc3b-9c84-4ccc-aa1a-\
616f799c7f1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{
   TagBox[
    RowBox[{"(", GridBox[{
       {
        RowBox[{"(", 
         TagBox[GridBox[{
            {"0"},
            {"0.6"},
            {"0"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}}],
          Column], ")"}], 
        RowBox[{"(", 
         TagBox[GridBox[{
            {"0.4"},
            {"0.1"},
            {"0.8"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}}],
          Column], ")"}], 
        RowBox[{"(", 
         TagBox[GridBox[{
            {"0.7"},
            {"0.9"},
            {"0.7"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}}],
          Column], ")"}]},
       {
        RowBox[{"(", 
         TagBox[GridBox[{
            {"1"},
            {"0"},
            {"0.9"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}}],
          Column], ")"}], 
        RowBox[{"(", 
         TagBox[GridBox[{
            {"0.6"},
            {"0.6"},
            {"1"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}}],
          Column], ")"}], 
        RowBox[{"(", 
         TagBox[GridBox[{
            {"1"},
            {"0.8"},
            {"0.3"}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
             "ItemsIndexed" -> {}}],
          Column], ")"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}, "Items" -> {}, 
        "ItemsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, 
        "ItemsIndexed" -> {}}], ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", " ", 
   RowBox[{"ColorSpace", " ", "->", " ", "\"\<RGB\>\""}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"329e3318-e701-4c79-ac65-d41b7c07578b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[
    RawArray["Real32",{{{0., 0.6000000238418579, 0.}, {0.4000000059604645, 
     0.10000000149011612`, 0.800000011920929}, {0.699999988079071, 
     0.8999999761581421, 0.699999988079071}}, {{1., 0., 0.8999999761581421}, {
     0.6000000238418579, 0.6000000238418579, 1.}, {1., 0.800000011920929, 
     0.30000001192092896`}}}], {{0, 2}, {3, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{3, 2},
  PlotRange->{{0, 3}, {0, 2}}]], "Output",
 CellChangeTimes->{3.813584604891075*^9, 3.8137390882523036`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"fe14e042-0e13-4358-bb57-36b7dc9b1638"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8135846776473784`*^9, 3.8135846853720627`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7d19d02f-5adb-4992-abce-cf72963a4d4b"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.8135846862589293`*^9, 3.8137390883101487`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"2018e7e0-9bc0-426e-8a39-2d61c97f1e37"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Arithmetic", "Subtitle",
 CellChangeTimes->{{3.8135852423322334`*^9, 3.8135852489296455`*^9}, {
  3.8135853137385845`*^9, 
  3.8135853148268723`*^9}},ExpressionUUID->"d6306237-f141-455b-9865-\
0c702c71211c"],

Cell[TextData[StyleBox["Matrix Addition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8135853170173054`*^9, 
  3.813585338632598*^9}},ExpressionUUID->"415227d2-68ab-4459-9dc0-\
1d8971e9bdb6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"_a11", "_a12", "_a13", "_a14"},
      {"_a21", "_a22", "_a23", "_a24"},
      {"_a31", "_a32", "_a33", "_a34"}
     }], ")"}], "+", 
   RowBox[{"(", GridBox[{
      {"_b11", "_b12", "_b13", "_b14"},
      {"_b21", "_b22", "_b23", "_b24"},
      {"_b31", "_b32", "_b33", "_b34"}
     }], ")"}]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"2", "3", "4", 
       RowBox[{"-", "1"}]},
      {
       RowBox[{"-", "2"}], "0", "2", "2"},
      {"1", "2", 
       RowBox[{"-", "1"}], "0"}
     }], ")"}], "+", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "1"}], "2", "2", 
       RowBox[{"-", "2"}]},
      {
       RowBox[{"-", "3"}], "0", "1", "0"},
      {"0", "0", 
       RowBox[{"-", "2"}], "1"}
     }], ")"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.813585379293437*^9, 3.8135854989834156`*^9}, {
  3.813585576983838*^9, 3.81358574430309*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"eada50e4-d507-44ab-93a4-fcf86719cbac"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"_a11", "+", "_b11"}], 
      RowBox[{"_a12", "+", "_b12"}], 
      RowBox[{"_a13", "+", "_b13"}], 
      RowBox[{"_a14", "+", "_b14"}]},
     {
      RowBox[{"_a21", "+", "_b21"}], 
      RowBox[{"_a22", "+", "_b22"}], 
      RowBox[{"_a23", "+", "_b23"}], 
      RowBox[{"_a24", "+", "_b24"}]},
     {
      RowBox[{"_a31", "+", "_b31"}], 
      RowBox[{"_a32", "+", "_b32"}], 
      RowBox[{"_a33", "+", "_b33"}], 
      RowBox[{"_a34", "+", "_b34"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.813585467992948*^9, 3.8135854996243153`*^9}, {
   3.8135856257514296`*^9, 3.813585656632503*^9}, 3.8135857474563227`*^9, 
   3.81373908842185*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"134b06ea-c69b-459f-89c3-\
3129e7db1698"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "5", "6", 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "5"}], "0", "3", "2"},
     {"1", "2", 
      RowBox[{"-", "3"}], "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.813585467992948*^9, 3.8135854996243153`*^9}, {
   3.8135856257514296`*^9, 3.813585656632503*^9}, 3.8135857474563227`*^9, 
   3.8137390884268374`*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"350dd24c-cb0b-4e81-8374-\
d2f9a1bd09b8"]
}, Open  ]],

Cell[TextData[StyleBox["Matrix Multiplication",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8135855083220043`*^9, 
  3.813585530753375*^9}},ExpressionUUID->"60667f76-7287-48d9-b140-\
1da8ca8b7ca6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"_a11", "_a12", "_a13"},
      {"_a21", "_a22", "_a23"}
     }], ")"}], ".", 
   RowBox[{"(", GridBox[{
      {"_b11", "_b12"},
      {"_b21", "_b22"},
      {"_b31", "_b32"}
     }], ")"}]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"2", "1", 
       RowBox[{"-", "3"}]},
      {
       RowBox[{"-", "1"}], "0", "1"}
     }], ")"}], ".", 
   RowBox[{"(", GridBox[{
      {"2", "1"},
      {
       RowBox[{"-", "1"}], "3"},
      {"3", "1"}
     }], ")"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.813585764204596*^9, 3.8135858577481623`*^9}, {
  3.8135859342710085`*^9, 3.81358601501606*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"70a635be-31fd-4878-8bb2-df137a065267"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"_a11", " ", "_b11"}], "+", 
       RowBox[{"_a12", " ", "_b21"}], "+", 
       RowBox[{"_a13", " ", "_b31"}]}], 
      RowBox[{
       RowBox[{"_a11", " ", "_b12"}], "+", 
       RowBox[{"_a12", " ", "_b22"}], "+", 
       RowBox[{"_a13", " ", "_b32"}]}]},
     {
      RowBox[{
       RowBox[{"_a21", " ", "_b11"}], "+", 
       RowBox[{"_a22", " ", "_b21"}], "+", 
       RowBox[{"_a23", " ", "_b31"}]}], 
      RowBox[{
       RowBox[{"_a21", " ", "_b12"}], "+", 
       RowBox[{"_a22", " ", "_b22"}], "+", 
       RowBox[{"_a23", " ", "_b32"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8135859499890413`*^9, 3.8135860161622396`*^9, 
  3.8137390885086193`*^9},
 CellLabel->
  "Out[8]//MatrixForm=",ExpressionUUID->"708f8f73-74a4-411d-a1d1-\
414c80fdf24c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "6"}], "2"},
     {"1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8135859499890413`*^9, 3.8135860161622396`*^9, 
  3.8137390885146027`*^9},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"6038fe9b-1c80-4712-8ce8-\
30796bcb0cf7"]
}, Open  ]],

Cell[TextData[StyleBox["Identity Matrix",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.813586057545273*^9, 
  3.8135860710701184`*^9}},ExpressionUUID->"b47d6938-6ef9-4c65-9d0e-\
557d2480d9d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Identity2", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Identity3", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"1", "0", "0"},
      {"0", "1", "0"},
      {"0", "0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Identity4", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", "1"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8135860934941444`*^9, 3.8135861732029977`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"2085bad9-ed15-41cb-b99a-5fa4fe90c91d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"_a11", "_a12", "_a13"},
      {"_a21", "_a22", "_a23"}
     }], ")"}], ".", "Identity3"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"2", "1", 
       RowBox[{"-", "3"}]},
      {
       RowBox[{"-", "1"}], "0", "1"}
     }], ")"}], ".", "Identity3"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.81358620016815*^9, 3.813586246542057*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"88f692e3-b2b9-4cb5-b0a7-491b8d6c07c9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"_a11", "_a12", "_a13"},
     {"_a21", "_a22", "_a23"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.813586207470168*^9, 3.813586248265215*^9}, 
   3.8137390885904007`*^9},
 CellLabel->
  "Out[13]//MatrixForm=",ExpressionUUID->"e8fa1bd4-a4b5-48ed-a960-\
9d7c2491d1be"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "1", 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "1"}], "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.813586207470168*^9, 3.813586248265215*^9}, 
   3.8137390885953865`*^9},
 CellLabel->
  "Out[14]//MatrixForm=",ExpressionUUID->"4478e1fa-dd85-4448-a7b9-\
044ae2045ab7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "5", "6", 
        RowBox[{"-", "3"}]},
       {
        RowBox[{"-", "5"}], "0", "3", "2"},
       {"1", "2", 
        RowBox[{"-", "3"}], "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ".", "Identity4"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.813586275467147*^9, 3.81358628297552*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"b5ba37fe-817e-42e8-aa6b-b1c4fe1329fd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "5", "6", 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "5"}], "0", "3", "2"},
     {"1", "2", 
      RowBox[{"-", "3"}], "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8135862835837803`*^9, 3.813739088660214*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"26b67bc2-c4c4-488d-9458-\
ab680b3c664b"]
}, Open  ]],

Cell[TextData[StyleBox["Transpose of a Matrix",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.813586292270231*^9, 
  3.8135863027030845`*^9}},ExpressionUUID->"6d2d413f-fd16-46cf-9baa-\
2af5dabb92ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Transpose", "[", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "5", "6", 
        RowBox[{"-", "3"}]},
       {
        RowBox[{"-", "5"}], "0", "3", "2"},
       {"1", "2", 
        RowBox[{"-", "3"}], "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"(", GridBox[{
      {"2", "1", 
       RowBox[{"-", "3"}]},
      {
       RowBox[{"-", "1"}], "0", "1"}
     }], ")"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.813586316766291*^9, 3.813586366021537*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"90bde4cf-6297-4d16-9f6c-81cd8284545d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "5"}], "1"},
     {"5", "0", "2"},
     {"6", "3", 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "3"}], "2", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.813586330668211*^9, 3.8135863674935627`*^9, 
  3.8137390887310247`*^9},
 CellLabel->
  "Out[16]//MatrixForm=",ExpressionUUID->"84eb15c2-80cb-4c2a-9465-\
a4fa96183a6d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", 
      RowBox[{"-", "1"}]},
     {"1", "0"},
     {
      RowBox[{"-", "3"}], "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.813586330668211*^9, 3.8135863674935627`*^9, 
  3.813739088737008*^9},
 CellLabel->
  "Out[17]//MatrixForm=",ExpressionUUID->"47fcf3c0-c305-4601-87f7-\
3adb3e3cdff3"]
}, Open  ]],

Cell[TextData[StyleBox["False Identity Matrix",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.813586567311139*^9, 
  3.8135865804264374`*^9}},ExpressionUUID->"6404eb45-1d08-4f47-8aa8-\
2cdac1d1c084"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"-", "5"}], "1"},
       {"5", "0", "2"},
       {"6", "3", 
        RowBox[{"-", "3"}]},
       {
        RowBox[{"-", "3"}], "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ".", 
   RowBox[{"(", GridBox[{
      {"0", "0", "1"},
      {"0", "1", "0"},
      {"1", "0", "0"}
     }], ")"}]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "1"},
      {"0", "0", "1", "0"},
      {"0", "1", "0", "0"},
      {"1", "0", "0", "0"}
     }], ")"}], ".", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"-", "5"}], "1"},
       {"5", "0", "2"},
       {"6", "3", 
        RowBox[{"-", "3"}]},
       {
        RowBox[{"-", "3"}], "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8135864168782306`*^9, 3.8135864633353033`*^9}, {
  3.813586496296048*^9, 3.8135865353255105`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"dac89213-33ec-4ef0-af3d-720edf38760a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "5"}], "1"},
     {"2", "0", "5"},
     {
      RowBox[{"-", "3"}], "3", "6"},
     {"1", "2", 
      RowBox[{"-", "3"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8135864419461317`*^9, 3.8135864639562454`*^9}, 
   3.813586536384071*^9, 3.8137390888187895`*^9},
 CellLabel->
  "Out[18]//MatrixForm=",ExpressionUUID->"65c70c8d-518e-4fb0-923c-\
223fac48a0ee"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "3"}], "2", "1"},
     {"6", "3", 
      RowBox[{"-", "3"}]},
     {"5", "0", "2"},
     {"1", 
      RowBox[{"-", "5"}], "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8135864419461317`*^9, 3.8135864639562454`*^9}, 
   3.813586536384071*^9, 3.8137390888257713`*^9},
 CellLabel->
  "Out[19]//MatrixForm=",ExpressionUUID->"4976dcd2-cde7-42ea-bc8c-\
3e8cfc66e65b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Algebra", "Subtitle",
 CellChangeTimes->{{3.8135866267640605`*^9, 3.8135866418791723`*^9}, {
  3.8135866783124075`*^9, 
  3.8135867008335533`*^9}},ExpressionUUID->"8e209437-633a-4424-90d4-\
785be1880d1b"],

Cell[TextData[StyleBox["Vector Addition",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8135867110825524`*^9, 
  3.81358671817358*^9}},ExpressionUUID->"53e1c566-004f-4e16-ad42-\
6aa4b5075371"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"origin", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeArrow", "[", "v_", "]"}], ":=", 
  RowBox[{"Arrow", "[", 
   RowBox[{"{", 
    RowBox[{"origin", ",", "v"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeTArrow", "[", "v_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
    RowBox[{"MakeArrow", "[", "v", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeT2Arrow", "[", "v_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Red", ",", 
    RowBox[{"MakeArrow", "[", "v", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeColorArrow", "[", 
   RowBox[{"c_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"c", ",", "Thick", ",", 
    RowBox[{"MakeArrow", "[", "v", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoColorArrow", "[", "v_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "5"}], ")"}], "/", "10"}], ",",
       "0", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "+", "5"}], ")"}], "/", "10"}]}], 
     "]"}], ",", 
    RowBox[{"MakeArrow", "[", "v", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakePoint", "[", "v_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
    RowBox[{"Point", "[", "v", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeGrid", "[", "v_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"-", "10"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "10"}], "}"}]}], "}"}], "]"}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", 
          RowBox[{"v", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], "]"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v1", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "0.5"}]},
      {
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2", "=", 
   RowBox[{"(", GridBox[{
      {"1"},
      {"2"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v3", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"2"},
      {"0.5"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "[", "v_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Transpose", "[", "v", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenderVectors", "[", 
   RowBox[{"vlist_", ",", 
    RowBox[{"plotrange_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MakeColorArrow", "[", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.7"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.7"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.7"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"T", "[", "#", "]"}]}], "]"}], "&"}], ",", "vlist"}], "]"}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"RenderVectors", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "3"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8135868234606633`*^9, 3.8135868695584836`*^9}, {
   3.813586906929957*^9, 3.813587039744003*^9}, {3.8135870716406784`*^9, 
   3.8135871266315107`*^9}, {3.8135873732618265`*^9, 3.813587383699937*^9}, {
   3.8135874557107277`*^9, 3.8135874968747005`*^9}, {3.8135876124224243`*^9, 
   3.8135876488487406`*^9}, {3.8135876899480414`*^9, 3.8135877327999506`*^9}, 
   3.813587828983768*^9, {3.813588015223914*^9, 3.8135880159230075`*^9}, {
   3.8135881047887726`*^9, 3.8135881273290014`*^9}, {3.813588362660252*^9, 
   3.813588373153098*^9}, {3.8135889980305133`*^9, 3.813589004457078*^9}, {
   3.813589174692114*^9, 3.813589175658558*^9}, {3.8135892187643814`*^9, 
   3.813589228229226*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"97cfc23b-d535-4244-b174-0a9d020b2b3c"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.37466556884564595`, 0.6190339065652166, 0.5073647550686791], 
    Thickness[Large], ArrowBox[{{0, 0}, {-0.5, -1}}]}, 
   {RGBColor[
    0.11043229748221939`, 0.17638610257774445`, 0.24187595798988304`], 
    Thickness[Large], ArrowBox[{{0, 0}, {1, 2}}]}, 
   {RGBColor[0.11769896363624732`, 0.4858572251147095, 0.1558674912871355], 
    Thickness[Large], ArrowBox[{{0, 0}, {2, 0.5}}]}},
  Axes->{True, True},
  ImageSize->Large,
  PlotRange->{{-1.5, 3}, {-1.5, 3}}]], "Output",
 CellChangeTimes->{
  3.8135868065071354`*^9, {3.813586851698559*^9, 3.813586871072322*^9}, 
   3.8135869473414965`*^9, {3.8135870312118373`*^9, 3.8135870403021364`*^9}, 
   3.8135874995510645`*^9, {3.813587624446613*^9, 3.813587636841798*^9}, 
   3.813587733462284*^9, 3.8135878303876133`*^9, 3.8135880166727734`*^9, {
   3.813588116308751*^9, 3.8135881293417125`*^9}, 3.813588373823033*^9, 
   3.813589005652461*^9, {3.813589230969034*^9, 3.813589233161273*^9}, 
   3.8137390889105515`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"184f64a6-516c-43fe-ac45-5e3bfa5752c2"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.813587676948549*^9},
 NumberMarks->False,
 CellLabel->"In[34]:=",ExpressionUUID->"228a9c1c-c550-4874-a3a6-e0fb08abc072"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"origin3d", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Make3dArrow", "[", "v_", "]"}], ":=", 
  RowBox[{"Arrow", "[", 
   RowBox[{"Tube", "[", 
    RowBox[{"{", 
     RowBox[{"origin3d", ",", "v"}], "}"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Make3dColorArrow", "[", 
   RowBox[{"c_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Opacity", "[", "0.5", "]"}], ",", "c", ",", "Thick", ",", 
    RowBox[{"Make3dArrow", "[", "v", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Make3dPoint", "[", "v_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
    RowBox[{"Point", "[", "v", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenderVectors3d", "[", 
   RowBox[{"vlist_", ",", 
    RowBox[{"plotrange_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Make3dColorArrow", "[", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.7"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.7"}], "}"}], "]"}], ",", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.7"}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"T", "[", "#", "]"}]}], "]"}], "&"}], ",", "vlist"}], "]"}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"RenderVectors3d", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", GridBox[{
          {"1"},
          {"2"},
          {
           RowBox[{"-", "1"}]}
         }], ")"}], ",", 
       RowBox[{"(", GridBox[{
          {"2"},
          {
           RowBox[{"-", "1"}]},
          {"0"}
         }], ")"}], ",", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"-", "1"}]},
          {"0"},
          {
           RowBox[{"-", "1"}]}
         }], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8135877574260764`*^9, 3.8135879950020013`*^9}, {
  3.8135881443129253`*^9, 3.8135883319625196`*^9}, {3.813588381679878*^9, 
  3.813588394045735*^9}, {3.8135884658070717`*^9, 3.813588466662634*^9}, {
  3.8135885027398734`*^9, 3.8135885984230447`*^9}, {3.8135886314028864`*^9, 
  3.813588737600843*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"4ede6810-c593-4eee-a6a3-136674e14b0e"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.4094652765784601, 0.058413242075181726`, 0.43970800226041673`],
     Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 2., -1.}}}]]}, 
   {RGBColor[0.5981016240689161, 0.33743747205482255`, 0.5785800286030249], 
    Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {2., -1., 0.}}}]]}, 
   {RGBColor[0.3627541753073942, 0.6263135842494627, 0.3315956608446098], 
    Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1., 0., -1.}}}]]}},
  Axes->{True, True},
  AxesOrigin->{0, 0, 0},
  Boxed->False,
  ImageSize->Large,
  ImageSizeRaw->Automatic,
  PlotRange->{{-2, 2}, {-2, 2}, {-2, 1}},
  ViewPoint->{
   3.2157559495747847`, -1.0300692205207675`, -0.21879459250655992`},
  ViewVertical->{
   0.5908012885204522, -0.15976552321358725`, -0.7908405750053938}]], "Output",
 CellChangeTimes->{
  3.813587963078825*^9, 3.813587995513246*^9, {3.81358815336077*^9, 
   3.8135881675297437`*^9}, {3.8135882174018793`*^9, 3.813588254279581*^9}, {
   3.8135882875537415`*^9, 3.8135883323874044`*^9}, 3.813588394735734*^9, {
   3.813588555923917*^9, 3.813588568586466*^9}, 3.8135885991955504`*^9, {
   3.8135886391700077`*^9, 3.8135887384591784`*^9}, 3.813739090722703*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"ef3e3db2-7ade-46fa-a35f-f5985473c69d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"redRGB", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blueRGB", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"greenRGB", "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColorAdd", "[", 
   RowBox[{"c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"c1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"c2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "2"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"c1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"c2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"c1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"c2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", "2"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VectorAddRender", "[", 
   RowBox[{"v1_", ",", "v2_", ",", 
    RowBox[{"plotrange_:", "Automatic"}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MakeColorArrow", "[", 
       RowBox[{"redRGB", ",", 
        RowBox[{"T", "[", "v1", "]"}]}], "]"}], ",", 
      RowBox[{"MakeColorArrow", "[", 
       RowBox[{"blueRGB", ",", 
        RowBox[{"T", "[", "v2", "]"}]}], "]"}], ",", 
      RowBox[{"MakeColorArrow", "[", 
       RowBox[{
        RowBox[{"ColorAdd", "[", 
         RowBox[{"redRGB", ",", "blueRGB"}], "]"}], ",", 
        RowBox[{
         RowBox[{"T", "[", "v1", "]"}], "+", 
         RowBox[{"T", "[", "v2", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"blueRGB", ",", "Dashed", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v1", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"redRGB", ",", "Dashed", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v2", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}]}]}], "}"}], "]"}]}], "}"}]}], "}"}],
     ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"VectorAddRender", "[", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"3"},
        {"0.5"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0.5"},
        {
         RowBox[{"-", "2"}]}
       }], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2.5"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8135890641468863`*^9, 3.813589165809366*^9}, {
  3.8135892540244193`*^9, 3.813589369579294*^9}, {3.8135896972252474`*^9, 
  3.813589726880391*^9}, {3.813590066581067*^9, 3.8135900849850736`*^9}, {
  3.8135901260404015`*^9, 3.8135901775853696`*^9}, {3.8135902138312473`*^9, 
  3.813590215694113*^9}, {3.8135902488194127`*^9, 3.813590292744649*^9}, {
  3.813590328176978*^9, 3.813590471250479*^9}, {3.813590521539442*^9, 
  3.813590531948658*^9}, {3.8135905758505526`*^9, 3.8135906042293825`*^9}, {
  3.8137422140263133`*^9, 3.813742225551659*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"1e4ba58a-809e-4de9-8778-826ea2026462"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[Large], ArrowBox[{{0, 0}, {3, 0.5}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], ArrowBox[{{0, 0}, {0.5, -2}}]}, 
   {RGBColor[
     NCache[{
       Rational[1, 2], 0, 
       Rational[1, 2]}, {0.5, 0, 0.5}]], Thickness[Large], 
    ArrowBox[{{0, 0}, {3.5, -1.5}}]}, 
   {RGBColor[0, 0, 1], Dashing[{Small, Small}], 
    ArrowBox[{{3, 0.5}, {3.5, -1.5}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
    ArrowBox[{{0.5, -2}, {3.5, -1.5}}]}},
  Axes->{True, True},
  ImageSize->Large,
  PlotRange->{{-0.5, 4}, {-2.5, 1}}]], "Output",
 CellChangeTimes->{
  3.813589264788463*^9, {3.813589341439698*^9, 3.813589383252781*^9}, 
   3.8135900677046757`*^9, {3.813590126614463*^9, 3.813590178215706*^9}, 
   3.8135902160157413`*^9, {3.8135902727776165`*^9, 3.813590294141122*^9}, {
   3.813590356780532*^9, 3.8135903867525377`*^9}, {3.813590418213747*^9, 
   3.813590440638137*^9}, 3.813590471879161*^9, 3.813590538348854*^9, 
   3.8135906046608696`*^9, 3.813739090826459*^9, {3.8137422189322367`*^9, 
   3.8137422260333724`*^9}},
 CellLabel->
  "Out[116]=",ExpressionUUID->"2052ecc8-4780-4dbb-9fd0-3a9b9a354d21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VectorAddRender3d", "[", 
   RowBox[{"v1_", ",", "v2_", ",", 
    RowBox[{"plotrange_:", "Automatic"}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"redRGB", ",", 
        RowBox[{"T", "[", "v1", "]"}]}], "]"}], ",", 
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"blueRGB", ",", 
        RowBox[{"T", "[", "v2", "]"}]}], "]"}], ",", 
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{
        RowBox[{"ColorAdd", "[", 
         RowBox[{"redRGB", ",", "blueRGB"}], "]"}], ",", 
        RowBox[{
         RowBox[{"T", "[", "v1", "]"}], "+", 
         RowBox[{"T", "[", "v2", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"blueRGB", ",", "Dashed", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v1", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"redRGB", ",", "Dashed", ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v2", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}]}]}], "}"}], "]"}]}], "}"}]}], "}"}],
     ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", "origin3d"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"VectorAddRender3d", "[", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1"},
        {"3"},
        {"1"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"-", "2"}]},
        {"1"},
        {
         RowBox[{"-", "3"}]}
       }], ")"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813590694701168*^9, 3.8135907086729603`*^9}, {
  3.8135907814194345`*^9, 3.8135908477737722`*^9}, {3.813590886931073*^9, 
  3.8135908956063166`*^9}, {3.8135909562309866`*^9, 3.8135909862973166`*^9}, {
  3.8137422383924885`*^9, 3.8137422465387554`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"30be749e-ec0b-458e-b084-d3a81f64d068"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 3., 1.}}}]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 1., -3.}}}]]}, 
   {RGBColor[
     NCache[{
       Rational[1, 2], 0, 
       Rational[1, 2]}, {0.5, 0, 0.5}]], Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-1., 4., -2.}}}]]}, 
   {RGBColor[0, 0, 1], Dashing[{Small, Small}], 
    Arrow3DBox[{{1, 3, 1}, {-1, 4, -2}}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
    Arrow3DBox[{{-2, 1, -3}, {-1, 4, -2}}]}},
  Axes->{True, True, True},
  AxesOrigin->{0, 0, 0},
  Boxed->False,
  ImageSize->Large,
  ImageSizeRaw->Automatic,
  ViewPoint->{1.610871035851906, 2.2402317086916095`, -1.9586874169264694`},
  ViewVertical->{0.9817020839496559, 0.18583753246148135`, 
   0.041538294350283174`}]], "Output",
 CellChangeTimes->{3.8135908961762176`*^9, 3.813590988235263*^9, 
  3.8137390908723035`*^9, 3.8137422473785095`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"2034ed87-2095-43d8-82d2-d7179e0c5b4a"]
}, Open  ]],

Cell[TextData[StyleBox["Vector Multiplication",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.813591014946908*^9, 
  3.8135910454918957`*^9}},ExpressionUUID->"beb8b9ea-0ece-444d-bdd5-\
338bed67cac7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RenderVectors3dRed", "[", 
   RowBox[{"vlist_", ",", 
    RowBox[{"plotrange_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Make3dColorArrow", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"T", "[", "#", "]"}]}], "]"}], "&"}], ",", "vlist"}], "]"}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"RenderVectors3dRed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", 
         RowBox[{"(", GridBox[{
            {"3"},
            {"0.5"},
            {"0"}
           }], ")"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "6"}], "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "\"\<scalar\>\""}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813591053295218*^9, 3.8135912934561763`*^9}, {
  3.813591330338784*^9, 3.813591331734855*^9}, {3.813591369219901*^9, 
  3.8135913958777523`*^9}, {3.8135914551839714`*^9, 3.813591505851997*^9}, {
  3.813591548250991*^9, 3.813591589635898*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"655792af-c562-4d37-8fd8-82f0c740bb66"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = -1.78, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1, "scalar"}, -2, 4}}, Typeset`size$$ = {
    576., {347., 352.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$3903$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$3903$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`RenderVectors3dRed[{$CellContext`i$$ {{3}, {0.5}, {
            0}}}, {{-6, 6}, {-6, 6}, {-2, 6}}], ImageSize -> Large], 
      "Specifications" :> {{{$CellContext`i$$, 1, "scalar"}, -2, 4}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{627., {394., 400.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8135911129977875`*^9, 3.8135911818377714`*^9}, 
   3.813591294038521*^9, 3.8135913974048924`*^9, 3.8135915065339675`*^9, 
   3.813591591908798*^9, 3.8137390909690456`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"a6a2ec64-754d-42c0-ae07-b02183754401"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RenderVectorsRed", "[", 
   RowBox[{"vlist_", ",", 
    RowBox[{"plotrange_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MakeColorArrow", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"T", "[", "#", "]"}]}], "]"}], "&"}], ",", "vlist"}], "]"}], 
    ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"RenderVectorsRed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", 
         RowBox[{"(", GridBox[{
            {"3"},
            {"0.5"}
           }], ")"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "\"\<scalar\>\""}], "}"}], ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8135915444673057`*^9, 3.8135915446409473`*^9}, {
  3.81359161338797*^9, 3.8135916928212023`*^9}, {3.81373913456112*^9, 
  3.8137391424784575`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"c1a92e25-154e-4560-a058-6880da4affa6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = -0.51, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i$$], 1, "scalar"}, -2, 4}}, Typeset`size$$ = {
    576., {99., 104.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$5292$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$5292$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`RenderVectorsRed[{$CellContext`i$$ {{3}, {0.5}}}, {{-6, 
         6}, {-2, 2}}], ImageSize -> Large], 
      "Specifications" :> {{{$CellContext`i$$, 1, "scalar"}, -2, 4}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{627., {146., 152.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.81359165607232*^9, {3.8135916861161566`*^9, 3.8135916933885765`*^9}, 
   3.813739091093712*^9, {3.813739135343993*^9, 3.813739143047937*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"d51285cf-38de-4cfb-b5ab-b730e9f5d3ec"]
}, Open  ]],

Cell[TextData[StyleBox["Basis Vectors",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.81359199268558*^9, 3.8135919976582975`*^9}, {
  3.813739478960142*^9, 
  3.813739487201123*^9}},ExpressionUUID->"822f2463-c411-4ec6-83bb-\
c871455565f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BasisRender", "[", 
   RowBox[{"v1_", ",", "v2_", ",", 
    RowBox[{"plotrange_:", "Automatic"}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MakeColorArrow", "[", 
       RowBox[{"redRGB", ",", 
        RowBox[{"T", "[", "v1", "]"}]}], "]"}], ",", 
      RowBox[{"MakeColorArrow", "[", 
       RowBox[{"blueRGB", ",", 
        RowBox[{"T", "[", "v2", "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"BasisRender", "[", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1"},
        {"0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0"},
        {"1"}
       }], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813739605763342*^9, 3.8137397670250363`*^9}, {
  3.813739806926693*^9, 3.8137398434772453`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"e640b8cd-ba4a-4515-b9b5-210b46f7075d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[Large], ArrowBox[{{0, 0}, {1, 0}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], ArrowBox[{{0, 0}, {0, 1}}]}},
  Axes->{True, True},
  ImageSize->Large,
  PlotRange->{{-2, 2}, {-2, 2}}]], "Output",
 CellChangeTimes->{
  3.813739672292619*^9, {3.813739721967187*^9, 3.8137397676872663`*^9}, {
   3.813739837461322*^9, 3.813739843962946*^9}},
 CellLabel->"Out[75]=",ExpressionUUID->"0ec8aa16-4bf8-4957-ae28-0bd67fe2f4f6"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.8137395108346653`*^9},ExpressionUUID->"f2f35c6a-f0a6-46a3-8c33-\
c384a584d5b2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BasisRender3d", "[", 
   RowBox[{"v1_", ",", "v2_", ",", "v3_", ",", 
    RowBox[{"plotrange_:", "Automatic"}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"Red", ",", 
        RowBox[{"T", "[", "v1", "]"}]}], "]"}], ",", 
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"T", "[", "v2", "]"}]}], "]"}], ",", 
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"Green", ",", 
        RowBox[{"T", "[", "v3", "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", " ", "False"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"BasisRender3d", "[", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1"},
        {"0"},
        {"0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0"},
        {"1"},
        {"0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0"},
        {"0"},
        {"1"}
       }], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8137398818447657`*^9, 3.8137399908704615`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"bb626894-e0ca-44ec-a7cb-28f9b57cbf34"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 0., 0.}}}]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1., 0.}}}]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], Opacity[0.5], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}},
  Axes->{True, True},
  AxesOrigin->{0, 0, 0},
  Boxed->False,
  ImageSize->Large,
  PlotRange->{{-2, 2}, {-2, 2}, {-2, 2}},
  ViewPoint->{2.5186103796740107`, -2.067196545672664, 0.9128527794542446},
  ViewVertical->{0.27973861321199806`, -0.21330505143114523`, 
   0.936080799563897}]], "Output",
 CellChangeTimes->{{3.8137399405950127`*^9, 3.8137399914818287`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"13c563b1-434d-44c8-a33e-5652c536f81f"]
}, Open  ]],

Cell[TextData[StyleBox["Forming any Vector from Basis Vector",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.813740040779807*^9, 
  3.8137400718161464`*^9}},ExpressionUUID->"00491a66-e955-43f8-934b-\
71f0ed140f3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"VectorAddRender", "[", 
    RowBox[{
     RowBox[{"a", 
      RowBox[{"(", GridBox[{
         {"1"},
         {"0"}
        }], ")"}]}], ",", 
     RowBox[{"b", 
      RowBox[{"(", GridBox[{
         {"0"},
         {"1"}
        }], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "\"\<ihat coef\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "\"\<jhat coef\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8137400788319917`*^9, 3.813740188803426*^9}, {
  3.813740231814784*^9, 3.813740330598975*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"7e218aa9-43a1-4f88-8462-77ad9eff073b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    1.4100000000000001`, $CellContext`b$$ = 0.8700000000000001, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1, "ihat coef"}, -3, 3}, {{
       Hold[$CellContext`b$$], 1, "jhat coef"}, -3, 3}}, Typeset`size$$ = {
    360., {179., 185.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$14371$$ = 
    0, $CellContext`b$14372$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$14371$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$14372$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`VectorAddRender[$CellContext`a$$ {{1}, {
         0}}, $CellContext`b$$ {{0}, {1}}, {{-3, 3}, {-3, 3}}], 
      "Specifications" :> {{{$CellContext`a$$, 1, "ihat coef"}, -3, 
         3}, {{$CellContext`b$$, 1, "jhat coef"}, -3, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {240., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.813740269004125*^9, 3.8137402999636445`*^9}, 
   3.8137403311245728`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"be2570fa-4f0a-4021-b3e7-baa81b5a3b5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VectorTripleAddRender3d", "[", 
   RowBox[{"v1_", ",", "v2_", ",", "v3_", ",", 
    RowBox[{"plotrange_:", "Automatic"}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"redRGB", ",", 
        RowBox[{"T", "[", "v1", "]"}]}], "]"}], ",", 
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"blueRGB", ",", 
        RowBox[{"T", "[", "v2", "]"}]}], "]"}], ",", 
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"greenRGB", ",", 
        RowBox[{"T", "[", "v3", "]"}]}], "]"}], ",", 
      RowBox[{"Make3dColorArrow", "[", 
       RowBox[{"Black", ",", 
        RowBox[{
         RowBox[{"T", "[", "v1", "]"}], "+", 
         RowBox[{"T", "[", "v2", "]"}], "+", 
         RowBox[{"T", "[", "v3", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"redRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"T", "[", "v2", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"redRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v2", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"redRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v3", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"blueRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v1", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"blueRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"blueRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v3", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v2", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"greenRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}]}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v2", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"greenRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v1", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"greenRGB", ",", "Dashed", ",", "Thick", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "v2", "]"}], ",", 
           RowBox[{
            RowBox[{"T", "[", "v2", "]"}], "+", 
            RowBox[{"T", "[", "v3", "]"}]}]}], "}"}], "]"}]}], "}"}]}], "}"}],
     ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", "origin3d"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"VectorTripleAddRender3d", "[", 
      RowBox[{
       RowBox[{"a", 
        RowBox[{"(", GridBox[{
           {"1"},
           {"0"},
           {"0"}
          }], ")"}]}], ",", 
       RowBox[{"b", 
        RowBox[{"(", GridBox[{
           {"0"},
           {"1"},
           {"0"}
          }], ")"}]}], ",", 
       RowBox[{"c", 
        RowBox[{"(", GridBox[{
           {"0"},
           {"0"},
           {"1"}
          }], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "\"\<ihat coef\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "\"\<jhat coef\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "\"\<khat coef\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813740385402181*^9, 3.8137404109582167`*^9}, {
  3.8137404682461047`*^9, 3.813740493292181*^9}, {3.8137427982671537`*^9, 
  3.813742879626775*^9}, {3.813742935198075*^9, 3.8137430202995625`*^9}, {
  3.8137431003188477`*^9, 3.8137431471802273`*^9}, {3.8137431825517693`*^9, 
  3.813743239296792*^9}, {3.8137433242791414`*^9, 3.8137433244357247`*^9}, {
  3.81374336885813*^9, 3.8137433833170433`*^9}, {3.81374343080711*^9, 
  3.813743432862764*^9}, {3.813743478972254*^9, 3.813743481991188*^9}, {
  3.813743663492422*^9, 3.8137436727746277`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"937c40fc-d72b-4409-9081-4ceca8c51d06"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -1.19, $CellContext`b$$ = \
-0.9699999999999998, $CellContext`c$$ = 1.0899999999999999`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1, "ihat coef"}, -3, 3}, {{
       Hold[$CellContext`b$$], 1, "jhat coef"}, -3, 3}, {{
       Hold[$CellContext`c$$], 1, "khat coef"}, -3, 3}}, Typeset`size$$ = {
    576., {310., 315.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$32852$$ = 
    0, $CellContext`b$32853$$ = 0, $CellContext`c$32854$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 
        1, $CellContext`c$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$32852$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$32853$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$32854$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`VectorTripleAddRender3d[$CellContext`a$$ {{1}, {0}, {
          0}}, $CellContext`b$$ {{0}, {1}, {0}}, $CellContext`c$$ {{0}, {0}, {
          1}}, {{-2, 2}, {-2, 2}, {-2, 2}}], ImageSize -> Large], 
      "Specifications" :> {{{$CellContext`a$$, 1, "ihat coef"}, -3, 
         3}, {{$CellContext`b$$, 1, "jhat coef"}, -3, 
         3}, {{$CellContext`c$$, 1, "khat coef"}, -3, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {385., 391.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.813740488462119*^9, 3.8137404939334664`*^9}, 
   3.8137428049799943`*^9, {3.8137428531415443`*^9, 3.81374288035483*^9}, {
   3.8137429756367936`*^9, 3.813743022007975*^9}, 3.8137431026735573`*^9, 
   3.813743149998701*^9, 3.813743199726529*^9, {3.813743246672181*^9, 
   3.8137432753341503`*^9}, 3.8137433270836473`*^9, {3.813743373810864*^9, 
   3.813743384016182*^9}, 3.8137434346838694`*^9, 3.813743482681343*^9, 
   3.813743673963629*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"b752901f-a606-4f44-a4fb-57a298725210"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MakeSpan", "[", 
   RowBox[{"v1_", ",", "v2_", ",", 
    RowBox[{"spacing_:", "1"}]}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", "v1"}], "+", 
       RowBox[{"j", " ", "v2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", "5"}], ",", "5", ",", "spacing"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"-", "5"}], ",", "5", ",", "spacing"}], "}"}]}], "]"}], ",", 
    "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RenderSpan", "[", 
   RowBox[{"v1_", ",", "v2_", ",", 
    RowBox[{"plotrange_:", "Automatic"}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"MakeArrow", ",", 
        RowBox[{"MakeSpan", "[", 
         RowBox[{
          RowBox[{"T", "[", "v1", "]"}], ",", 
          RowBox[{"T", "[", "v2", "]"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{"origin", ",", 
             RowBox[{"T", "[", "v1", "]"}]}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{"origin", ",", 
             RowBox[{"T", "[", "v2", "]"}]}], "}"}], "]"}]}], "}"}]}], 
       "}"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"RenderSpan", "[", 
      RowBox[{
       RowBox[{"(", GridBox[{
          {"a"},
          {"c"}
         }], ")"}], ",", 
       RowBox[{"(", GridBox[{
          {"b"},
          {"d"}
         }], ")"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "\"\<a\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "\"\<b\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "\"\<c\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "\"\<d\>\""}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8137438142029705`*^9, 3.813744163919145*^9}, {
  3.813744197198738*^9, 3.8137441998087673`*^9}, {3.813744493964199*^9, 
  3.8137445300427957`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"97f217f6-db24-4ee0-96c3-70b14c03f9cd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`b$$ = 
    0, $CellContext`c$$ = 0, $CellContext`d$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1, "a"}, -3, 3}, {{
       Hold[$CellContext`b$$], 0, "b"}, -3, 3}, {{
       Hold[$CellContext`c$$], 0, "c"}, -3, 3}, {{
       Hold[$CellContext`d$$], 1, "d"}, -3, 3}}, Typeset`size$$ = {
    576., {285., 291.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$41535$$ = 
    0, $CellContext`b$41536$$ = 0, $CellContext`c$41537$$ = 
    0, $CellContext`d$41538$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 
        0, $CellContext`c$$ = 0, $CellContext`d$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$41535$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$41536$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$41537$$, 0], 
        Hold[$CellContext`d$$, $CellContext`d$41538$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`RenderSpan[{{$CellContext`a$$}, {$CellContext`c$$}}, \
{{$CellContext`b$$}, {$CellContext`d$$}}], ImageSize -> Large], 
      "Specifications" :> {{{$CellContext`a$$, 1, "a"}, -3, 
         3}, {{$CellContext`b$$, 0, "b"}, -3, 
         3}, {{$CellContext`c$$, 0, "c"}, -3, 
         3}, {{$CellContext`d$$, 1, "d"}, -3, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {374., 380.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.813744270252928*^9, 3.813744530813735*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"8eb45153-5452-4cda-be47-17703e745d0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Make3dSpan", "[", 
   RowBox[{"v1_", ",", "v2_", ",", "v3_", ",", 
    RowBox[{"spacing_:", "3"}]}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", " ", "v1"}], "+", 
       RowBox[{"j", " ", "v2"}], "+", 
       RowBox[{"k", " ", "v3"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", "5"}], ",", "5", ",", "spacing"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"-", "5"}], ",", "5", ",", "spacing"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"-", "5"}], ",", "5", ",", "spacing"}], "}"}]}], "]"}], ",", 
    "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Render3dSpan", "[", 
   RowBox[{"v1_", ",", "v2_", ",", "v3_", ",", 
    RowBox[{"plotrange_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Make3dArrow", ",", 
          RowBox[{"Make3dSpan", "[", 
           RowBox[{
            RowBox[{"T", "[", "v1", "]"}], ",", 
            RowBox[{"T", "[", "v2", "]"}], ",", 
            RowBox[{"T", "[", "v3", "]"}]}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"Tube", "[", 
            RowBox[{"{", 
             RowBox[{"origin3d", ",", 
              RowBox[{"T", "[", "v1", "]"}]}], "}"}], "]"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"Tube", "[", 
            RowBox[{"{", 
             RowBox[{"origin3d", ",", 
              RowBox[{"T", "[", "v2", "]"}]}], "}"}], "]"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "1", "]"}], ",", "Green", ",", "Thick", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"Tube", "[", 
            RowBox[{"{", 
             RowBox[{"origin3d", ",", 
              RowBox[{"T", "[", "v3", "]"}]}], "}"}], "]"}], "]"}]}], "}"}]}],
        "}"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", "origin3d"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Render3dSpan", "[", 
      RowBox[{
       RowBox[{"(", GridBox[{
          {"a"},
          {"d"},
          {"g"}
         }], ")"}], ",", 
       RowBox[{"(", GridBox[{
          {"b"},
          {"e"},
          {"h"}
         }], ")"}], ",", 
       RowBox[{"(", GridBox[{
          {"c"},
          {"f"},
          {"i"}
         }], ")"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1"}], "}"}], ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8137444393448*^9, 3.8137444822475433`*^9}, {
  3.81374454254996*^9, 3.813744704511628*^9}, {3.813744738185652*^9, 
  3.813744918827097*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"205097fc-d683-43c4-9aa5-e23b3735465e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`b$$ = 
    0, $CellContext`c$$ = 0, $CellContext`d$$ = 0, $CellContext`e$$ = 
    1, $CellContext`f$$ = 0, $CellContext`g$$ = 0, $CellContext`h$$ = 
    0, $CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 1}, -3, 3}, {{
       Hold[$CellContext`b$$], 0}, -3, 3}, {{
       Hold[$CellContext`c$$], 0}, -3, 3}, {{
       Hold[$CellContext`d$$], 0}, -3, 3}, {{
       Hold[$CellContext`e$$], 1}, -3, 3}, {{
       Hold[$CellContext`f$$], 0}, -3, 3}, {{
       Hold[$CellContext`g$$], 0}, -3, 3}, {{
       Hold[$CellContext`h$$], 0}, -3, 3}, {{
       Hold[$CellContext`i$$], 1}, -3, 3}}, Typeset`size$$ = {
    576., {310., 315.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$44427$$ = 
    0, $CellContext`b$44428$$ = 0, $CellContext`c$44429$$ = 
    0, $CellContext`d$44430$$ = 0, $CellContext`e$44431$$ = 
    0, $CellContext`f$44432$$ = 0, $CellContext`g$44433$$ = 
    0, $CellContext`h$44434$$ = 0, $CellContext`i$44435$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 1, $CellContext`b$$ = 
        0, $CellContext`c$$ = 0, $CellContext`d$$ = 0, $CellContext`e$$ = 
        1, $CellContext`f$$ = 0, $CellContext`g$$ = 0, $CellContext`h$$ = 
        0, $CellContext`i$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$44427$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$44428$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$44429$$, 0], 
        Hold[$CellContext`d$$, $CellContext`d$44430$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$44431$$, 0], 
        Hold[$CellContext`f$$, $CellContext`f$44432$$, 0], 
        Hold[$CellContext`g$$, $CellContext`g$44433$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$44434$$, 0], 
        Hold[$CellContext`i$$, $CellContext`i$44435$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`Render3dSpan[{{$CellContext`a$$}, {$CellContext`d$$}, \
{$CellContext`g$$}}, {{$CellContext`b$$}, {$CellContext`e$$}, \
{$CellContext`h$$}}, {{$CellContext`c$$}, {$CellContext`f$$}, \
{$CellContext`i$$}}], ImageSize -> Large], 
      "Specifications" :> {{{$CellContext`a$$, 1}, -3, 
         3}, {{$CellContext`b$$, 0}, -3, 3}, {{$CellContext`c$$, 0}, -3, 
         3}, {{$CellContext`d$$, 0}, -3, 3}, {{$CellContext`e$$, 1}, -3, 
         3}, {{$CellContext`f$$, 0}, -3, 3}, {{$CellContext`g$$, 0}, -3, 
         3}, {{$CellContext`h$$, 0}, -3, 3}, {{$CellContext`i$$, 1}, -3, 3}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{856., {341., 347.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.813744440675275*^9, 3.813744484951282*^9}, 
   3.813744567942144*^9, 3.813744619567031*^9, 3.813744668194645*^9, 
   3.8137447050661464`*^9, 3.8137447616484947`*^9, {3.8137448813442707`*^9, 
   3.8137448859818616`*^9}, 3.8137449223098073`*^9, 3.8137449680675383`*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"2202dca4-e6ab-4ddb-8d12-25f703c121bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Render3dSpan", "[", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1"},
        {"0"},
        {"0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0"},
        {"1"},
        {"0"}
       }], ")"}], ",", 
     RowBox[{"(", GridBox[{
        {"0"},
        {"0"},
        {"1"}
       }], ")"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8137450156495905`*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"42f598f4-e267-41bf-8a5c-757bea2fe978"],

Cell[BoxData[
 Graphics3DBox[
  {Opacity[
   0.4], {Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -5., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -5., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -5., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -5., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -2., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -2., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -2., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., -2., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 1., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 1., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 1., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 1., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 4., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 4., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 4., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-5., 4., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -5., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -5., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -5., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -5., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -2., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -2., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -2., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., -2., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 1., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 1., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 1., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 1., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 4., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 4., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 4., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {-2., 4., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -5., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -5., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -5., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -5., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -2., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -2., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -2., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., -2., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 1., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 1., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 1., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 1., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 4., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 4., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 4., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 4., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -5., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -5., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -5., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -5., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -2., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -2., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -2., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., -2., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 1., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 1., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 1., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 1., 4.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 4., -5.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 4., -2.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 4., 1.}}}]], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {4., 4., 4.}}}]]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {1., 0., 0.}}}]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], Opacity[1], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 1., 0.}}}]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], Opacity[1], 
    Arrow3DBox[TubeBox[{{{0., 0., 0.}, {0., 0., 1.}}}]]}},
  Axes->{True, True, True},
  AxesOrigin->{0, 0, 0},
  Boxed->True,
  ImageSize->Large,
  PlotRange->{{-5, 5}, {-5, 5}, {-5, 5}}]], "Output",
 CellChangeTimes->{3.813745017360052*^9},
 CellLabel->"Out[258]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyMvQtYW1d+L+ozsfNw4szjTs+0M9OSttOequ2905a2p4+jtnNPW7edzLSd
dmY6qWcy42SUmDgOCcGPjTE2EgYMFgZkmQ2ykPSX2FgPJASKYAvBtoXkbQvL
UiTLI4Nh6JA4dulxr+uc+Oa7c3PWa29pB5l7+T77swXs9V+///ux1v7aD958
+Yev/uDNPS/84Jmdb/yg/uU9LzQ885evvYE+euQ/bdnyiT9Df15/ZstW9O+P
tmzZ8Fcr/mvLI8989NFHLX19feR/M+Rv+v0W8s9H8fe/LwjCXGNj48revXs/
MhgMw0ePHq380WbyzyeURyk/gn8NfwP/Kv7sz9Lp9JZYxe81kX9uw5/jn8eP
x7+Pn7PlEfytT+CPtzyCv7FF+ZqueMBB+oCP00j28yj53laFEPw9/LlY8ev7
y7+Ov4V/Ff84ofNx+j3l1/HP4D0Q2ipJaKgOk7KP7WQbhCCyI/wv/DOaZ7y+
kQ78h+C3Q33AJyjD8G8TCvFXtOIpr5WfoqCp7uaTlEr8RAIp+8Lfwz83VfGY
vZtg+hlKguYxn1AZVUlM3SbQfpY+Bf+bQEH+R/9WxQR/RSqe9zJ9XlVR+c8P
f56ygw3P+2F1yMkuf47+Lv6eKnlby+ArYr1lsuJ5L2yy3y88/Hn4+3jPG573
fcqwh4nVL5ThUnipPBL/iMqciYpHfq/6lsl2frHK87bRz/DPqCwJVzxvV/l5
G+Ttl8u/S1hU8TxF5jY87zvVt2wym807g07/r1R55KNlrqg2bLzikd8m/3y8
KlfQl37B5+MWIuImj9bofeWjv0n3VI05ivBxGd857po0T/73pTKpKpqPlTmm
CmmoYo1vbMIxhmaN32jkr0cj3GJK3sL2UWl7mR3TrhusWOPvNq6hQsToM4yb
zbCalP6/1tBwtnKNr5XX2GBSnqDfq+mqq+Nnz1jhVlo2FROJ7XwLr2CmWeuJ
Kiwfq1jrq5tgtp1yFj27Zafn2DHIeAW4k8uCPBXXne4ZIssRU/skXURjjQIV
i/x1eZENov8UXUTnPNwKgeMdsBiLwno+B5mYpBOGhA2LaExU5SJ/uQlqzJ7r
pNM9kLTxmDuwXshBNi7pxpxjXyo/WjUFT5aBU8H0Vyz355sIwqfpcgZvZyfk
Al5YS8uwXsxDHi03KWy2nMbAVS73FfrIhxk46mkeqzEisQie6IbSVARu59J0
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
7uhrg+h1SRi1B4aZV8Mkfili56xM9tEoZio7vrURxbQMKc5/GFgCEcBUNSJM
I7Ui9HLNphFgNbhpYYcOLIMXGGFn7jpC7ip0O4zrvAzRu8gIO6NBLByewYLU
CIwrTRwKTbsfGqPR6ybEyY66NLQf0YfxbNpc+qstWx6zuySANfFb7CGCm7WZ
O5KH5E0cihBzA1YNGEXT9X0eCNwgmItMQec5B6IzUZQYQwAGy2gtXIBAXrwE
uefy4mUGvBCwT9CPX6Zmh8PRSG8feXo0DObnFkF0Hvre6AWwsHgZnW2weBU9
wA++sHg96fsgungdzC9cB3NwzdAs/ioMri+DyCRk+WG4y41Cxk9Fgd8/Azzu
SRiLBoHLSgGHEcas6h6uzezDrOYRzGyAOOnqhVGDFdO0dGFdMIJQ8QQcBZdH
F+YQcgvjv5sY/00XAtD+Ow2lcZju8y/v7LWHcAc5Chw6TxzywEHYgENphb+8
Q2lLStVbW+R5xso6jviNLWVtb70glux4I9TBeTekPno4osnOjlqKiqPWitrZ
7qqGkKNGFLJWNtmNlcJOTTH/lLq4AVU37+zKzd1mbhamU+ZO7tR4YoMW3ZkO
bcHlHvd24V2UTqojbbo+wqF3Q9i7zK4u8+m+1tblQYXyhg+ob3jVlhsuYF41
Q5JKlDe9LskqiRfp68teeNuX/9v3Lp58fecfct7eM1+7Z59Pkp7jtpRWfeJu
qF8Z6iSvUDrL1YnBIXL+dBSn+igc7vUIEuJJcysN98kBy2pXYcUVIosm16vB
9vrVBWv77TlTy62LXtXagl8P4X7ynt9uvRv2un8/PjZyq9/ee2uyU3j9nKVZ
4pLhXGc9PRHcem7QZnfq+iJWy8SsQe+zqzoHrZImHSgvN4BSEQWEEle6vLX9
23jh8Qw8N1/XVlB8oaO0fLW7onzVX8e9NsI/tdJbmDqpPPC6XfTWc0Qjy5Al
W58Cyu2/5qo5v+Fos16Hdv0yq7t8XhKf9lcrlsbkqw4x54pHhl2jCM7vx7TJ
VyMWdGbfT1hSvJ6KRH6CVo001a3VjdcOpx6G4SnFtVqD6+Gph0Kq0SVaNZqM
q0YLLDGmVaMFEAlO4UFqFAsHp5nwFKLbp21jVSMLGgyK2vcyGdAmZET+MQHP
CX6ZqSj9K6Zmqy6f424o4PpkAkBp5TSmx90uEKH86BQlMBOJgLnJKeiY52Dg
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
iaLWRieYnb9Zkpqa9LPHII25ir+Iu70tknee5RF7flev3PuuT5d+4DTkrFc1
+Xm3dUWla/rK+ptGXuMlkte4ZK5sWDJX1U+5AAh7SUsg5POR80sr+rMXfs9M
pUbn9HnGlZYOPWUTiSadzS0LHoUSujnzQq/CuGISSM/JcysGGt4/bCh9fru3
/s1dk3LOkau2olOrMNa7GSTN12fHps967b7L2ZmZK0ZJ9Y2lkOvTkEN/1y9t
un3Wqb635AJry4PtsbwTGffG9Iq7UQe4taDh35w3NE2OEuKxsw7rdUtFBXKL
8DN+J3YgKSl2EK7Mv/1WrPIXP4u1/DYlJtuaEmt77elYK0QVvuU/Y80//3Gs
7b9+FFP+8l9juuTvxgzJ/ytGQCRVQdeFkKSGiJp45pnQ/aSkPXeh31pI2njM
XFL8DzvAm86fihHfRLcDhpCKihrIN5n8KQohSU0f6CFHab6ZUMkwv8oC6y9Y
qegxFX5ePzZiM6OhNoxUhCwZFRg15sXn6P8xqpISRaJ//Hx8McUYX6A5aG/Z
EWywIvXJsZpDb8ZpJYSduw7GiGI2RnwMrXS3PRIj9sVpJUXHiNORaXzCOwD9
l4+JEcNIhmJp5QxLKxdoPNG0MulfkOuiXVh8PSSXVzdoQ5fWtaF4bsjjScgN
4XbjANbbF2G1ISY3pANWJjckQLkhEbxZfPpwAqQNJXowNjdEe7Ad8baFBFwx
3TevxGWGoWN7dy0f3bu7p3bfWx0tu9/p0h37KKTLSp81FeTAeLAMqcNRS0Xd
AsKVpVaw4mhsPD+oVk8GBgbGIsEJc/TjK+SZpUtEcPrjzkFf2GXTmKetYlnU
1a5acrUrFzyd5pUeSecFgisYqN+Z7uK99sFY07t7V7oyT97yiQQ3T1ttN+ZH
xxcoNz0j6OawrfPm0vTQXSehXg2atXenSHxt3lgdy0k/ukYpW+5NEfzb54wN
t8OE8OyEsfNq2G7/Q2eZIJYG8XMcriy48v7i6zH+j/8lJnnulzEZ9EbS15+J
tb+SEmuHOJL/109iBMQR+e/fjzl++qOYfsuvY7UQQ4UshsYhpj5LSroOTbMd
/v1NZKLM3GI2UENUcEPhAa29tGgwHdHHlqJ7gbMnzAAnXorOUMGH+mqU5YJT
tPbCVOYF2Mo8K1uZ595QmdeY+di55SxwErIlicBJ+FYJ43FQRREdeA39UeBF
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
InnID8jlYC2a7PVavHvUSvV/dcTr5nMaio01FTVvxSezv1oi6bUwmUhNeIhF
F+nM2FyZjNNLZyGKF6fT2chEzD1tjVC2NklGf76NVp1pzuBlTYq+w/X8jn2V
qPv5L/JXmAuaep9H3TmFJmhGonLdOfxGJtn0AtcgtQnJJlAoHCPri7LqTOHY
EeZP6L0lZrUDlbr+9waSCx9wFfvYlnh+K5K3KAbJJjusPn8epbD4aMcYyrK7
VCYYMIUekmWP57PsaBInj7IQqK6Hsuys6/kca4cLQpVg7TAxYweOy9QoDJrM
JBQJ/iztIhegHV5OBcmoOxqZt0xYXXL1sDZaffYsssMIzYUq+OceAmc2RfEJ
KFhr20YkOrfHEoWCNU2n/VE6biaWQr310BgfBvHaVwRRISsUWDg/ua2nqgPv
Q6pVv8rCeViN4FwsKi0VjLZ1gfRkyJmNxsKLLju4mwyY02YNkQXtKJQqWffI
uRNEecSFWrA2abWvBkm3Sz0OI9slvlHn4CbjiE6+fPL2wV8cQ2j+919GXrqT
8HrojF5M35hoTy3bIZqtehDXakAIZyaauGWnhTCoGgZtFdIdQ7i6QtLdvdJY
jSFL9evjpcfzNV0uw7zZ8Za+5e5OXJkYohdd4/Six5NIOSaIBYfHvOjyZjJW
G73kC9GXQml61pUgpywhfcDgp0xNnVnN6SZKXtbI5PO79lcXeo+fLJjk7fzB
nyEdsSMfaG3KTu3YnJ1igcxkTZlKddJmwDMeJ9SW85xJZjsgQq4o5iRcaMBU
ST9zOsSP8+en5MNF5t65/xrNm2bnF+DQlbfLqMgI9elGGt8C7bKLyU4V0vj5
kAul8f1udMoTfxYNujUX0vjsn/g8i+byY5zklQtlUhtQaiNmtXnerXNdThk8
2ayFXKGd/pXsZDCTCkxfogK+sH0mGB91OTzGHnFP9Gzl6Q/3dWzqpC684U9z
lkBRU4MpL7RrLSpXIjAxS89NzdEJh52O6qSJUEclQVXuwamGV/nedj56pSza
nmIw3XPRAsXFIhIXENOA2RII/2GGVjGg9HbianyBmrObiZshJ1gjrfrZIRG4
6xnA11xyppuHAzbm6habs5O2lKl/0Ow3h0HAk0SGh/1Tn2uv2F351ulXzyNg
f6Cfk95Jkl46oeumaWdvdmFCZZ4hNIAaVgOyVwlcIoVz8KwwUnuy9t2yY6du
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
FpZA51wFCwp93IYAjKPQOmQPL/osE9nJ4HJ2amr1nZmJ1LvRiYUPYsG5B7FA
fHXCF/FPxW65Y8hQzK3sQmJll0/gNrwZEbljFjK9+e7W1qMWc+wnb+d5/HBR
2DPAW/tc2FCI4lR6ccE3IaYcRuG2z6xMXtfKR5Sv/6736CuOycp/LCrGPsue
XltVlbnp/NV0zXn1e6eqav57RUUFSDlDCpLny9Vqp7K3x9ch9HnFwKDdfSuW
1t2Mzr001t/L33KZSTfezQl7qQdrwWjrYcfWCg9COvmiTcuCy2ewK7N/mONg
K+iGPRQMTduGueDwFMSDK1xwNIY7HkqKDsG3ySH45zfkR28s+0aydxbifz3j
cTEw73tYJYeCEfcN6XFSllVpnax5uWgSV8pC2GqQ09WPPMeNNBaaxc132Hth
9q3cebaKm9ZqIeEMAHKaeRfvlA3UdhZ0+pBoiBWdqnJjD2Tu+CBpWmWd1ljl
nrvj1MI27v6AbTu6K7Bt08IWvvDJQJfYqix5DIRDB0qeAeMrB2Do4AEY+PEB
4F96EdQvvgiXv30AqmU/4CtlPyut+NYrzKF6DnnsPjJg2nu5UXljcoJfx74Z
683D8xGJ8BI3NRpTWq8OoLd/Ce89KnnUdiKG/oK0aM660t0Xf0Fdd8U5vv1M
E0L/EKg01Ah0C2kYcK2BcXwLuUU7ZMNk2BVBcW7MEfVOr0RHJ99PRVMfJGaX
P5gPie+npmfvLMaW30nPLrpTK+9CIpXl5+IppTiJXCSfD7GmsbCoX5TG/m4B
6Vt67BBwp7zizM3MbHAWkf6IY90j8Lc8sD9m6FAKKOIPVLz0O8vpX5gmL/4K
+0gk4n+MnOsn+Qu1tXdPHK/86Nixk2vV5xrbVG1d+TTUF2m8rbIK/d3e5Ej/
SHYBd39PxK0Og6fDr+HhfnwctmM+PJBK2H2p9xJ8HNbx6x4ey40y4i8TUCQy
rlLBg1SEvx2f3G9o7oAA4gc8XT9i8dMcxNPK49/HxH8CTvy0ZhedwRtpjyN7
JxX/qbVf/2xdXZ2k0ETeVF6Mp7SmolHifkSCAuB2n2xilZtGRwrFs2yCC9/G
xyXGR2gJqpv43a0M7N1HnCOmyj0Wj9SRiz6JgsDejgJa5CP5Bt2KwTo1MSQF
sJfBq5j1j6NwREkSAeojNXgwGbM+g335ux4td8+rAXQhX/yeW4PAv+NUQfzy
b8BX+QP0O3fFiyVPg/voi+CkF2c/8qLy+qvfVw4c/L6y84ff39/89y/S4Ob5
wg4dPD6Ta53bnEvkEI+7fMRQgveZPFihjHb5VFSxvrdPQ3xR8o1GMKXlbSeR
pa1uREECj7jeBxqDSHje4N0EY2gbLOEdcMbvg1vcc4xPr7vFQEwUfeH1uWB0
KxGau7McX7yzkljeupHIZFeT6EosZNYSiY4FvwenuvCQ+ici/XsSyeOd7Jc6
eSvvFCKhm/6F+MZNcSyESH4Ykfx1TjSq5E5OwVne+Al2cfi5mp/tqap/8434
iJGldZ95eCXD+8eOHUtWK5SBy+1WGHIin90SZkT9fFlHZaXQfbknOaTSZ2PO
yWx6Kpn0C2MhS5ewnhi+7t+Y9Lw17xaw5yC31VUhIlMRffC0s5fJQD1dlhEM
sImi749WRWXS6ySNXHjALRxYKnMIniLMfxth/mAtwfziqD27k55zD3Zqy5ob
mhnVy1sOnwT+bE7YR3J1NEcquGEUh6+FYqQialKbCruOc/ke9vPlNyed/O7m
Mnz00QP+xo1b5X7PZK4PHcXnsrC2kxcNZuznQNgS2m/rspEOAymVhw/O0Gs4
CKfC4/zRxsIFd3+UJ3vZfV+n8n5Ag8JU/HWfMqU9qZy59Au5p+ofyjyV33sS
ffl79KPS4lD86+t5hD5kqT5fGjNiUS/I9bRt4b6CNYz27VxP2/W2Hpmg6sX5
4l/Qf6oo6VUMdglw5HdvkK9/zjIz9Xz7RS2ou8ZBa0xQWg9ugz1yD1wM6J7Z
d/2e+J1F78ztdV80m01El7OZuWUE8JXs2sJKdn1hObueTGTWxbi4KYbdW4mo
cCcV+fspj+tReV16C57HeaUaoQvcPntsTIyuLyZCifWkx+Vd91zn171mRcTQ
rjCf+AXvOvYTiJ9+CTszhyaafk3CHpbB/qRFZge0bW18R7Mdug1LJCQetkxh
pmeQl6urqv3D9c3ZkGkUMfxcZsIy5oYu+/p4jyG76vNlnD39NXxDP5b34lPd
DbAX4LmUvYckehnkZTecAjxIhGF3KSabEEBpatFh34b3uyOlOo1GgnzFi4zm
f34BQ34xOWLL3l2ec9sH9WWGjmvPMWzjEU7NyStEDajtjJYExQzHxNbgaiZu
rpnC/3qjrhD3ubyKlKu6LfqQj5MgEqrr67fLI5MRaTNiuaehlp/q1MCSK4gx
z9s7h3EfgOQDmQ4fJj0AeL6gQH0CS7OVfPMRL8kqVKSNLDlqVWa8I/zN3Dqj
LeSOb8FSbIWfdE3RXV0YsBVVP/sMwJIsLYXpHxNRm/baDlCrsDgIep6BLbBh
eIr3BU9i1+0T3xXHIhuLvvhv18fF32ZDyZ3sTHo3G8nsZpPLt7ObC8nM1sLs
4m8TM/47CzPudxKTwrup8GPoyYVL9nWl/HYMKQmd3yev+iXGwqrAmGNmMxZe
fTcZv/lP4nj4/vKoY30r5Aktj1qxz6EAFGiGcKBZ/VM+2kD1H0qYQCpzPD+J
8aXWjbaTx/h23DGB+/edawis0wVgLW2sqOjmz5xbD/KD2dVQLBPxzjhMPZ5w
72Vz1jfgXo85xxwDl0ygqh4c1p27Ktx1dHK7IV2pTdcqgZV4EfPGAfj9aoL7
bWwKCxbjFhA8gKwctU48WwTWSjjxCgHrxLJvNPseAqsPoMzR10ed631Kqp46
CC3V3SgW7WCuOJnfXxknBcGyWc9sgQJdrltDqqijg4QIrpffXooQmN6+vS1z
9gLJfzIs4iYwxXRXF6RcAUh4cdXdK+87qyI/U5jBGXrtNZInxf44qU68ek5a
NUdrs8USD0XSa6x3az0ayW06wn0nKaxj6ZxUjupHpN6tn+Q/Tc5PLubYoqQL
zcy8cKjzUg+vUVtJd4ctvCN45t5DgN1yBxLvIN9hIzMxezsbmr+dnUm+k42m
7mTjy+9k4+nb2bnkWmY2ubI4P5vwb85NCbupANxPBR+DvVQAfxlHDtZeYlz+
/oJfIr/vM7xoqqoU0N6PR92zibnNvfnwwoN5r/fums+xvjbuFFNeu3/GZBwd
rVUI4cqfgHjhEO1+bzwiIRaj91HULeXVkG/IqRoHoHswRcbihy2kX4Le2i9c
6nrrbMbarMqujIWy65Mh/7zTBQbtuNDf4Rb1bcNRfesQRqu3tfLaek9Vu+hu
65Tf9PRQ54U60DiV/+FqQi56nDLtuUsQMOLZhLjMKfgeBmvloYsErIseFwHr
pOV6mcdgYGCVtbxaDdrTalDXDsmbqnpyC7EQqU73DiBSzeCBWRQI2gplmXNV
NKlMJurV/O25SdIun4iICmevGf8b0iokxNHycE8PnzBbWQk7KBdUQ6wHuVx/
+DBnfL2COM84ZVKwNa7kv9JXLardPcNAit1eujZJao7CIC1QVfPGsd6ZzNpr
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
m9YwiPaPR4co+/akxnp/T/0m+qcWNeN21Oc59uiQhrh9UePRto9FCvolZqs4
RR4SOC343sbtqVG85jR78FSBGsqSf1fjqfVqauwoxuwyVTetIXC/U6CQEsud
3Jl9sgdjjk4X1WDfb2s8lfrUjyPGzFHrZjR491saz638VxBinT069jDz8K//
g8bTX9uZFrIosyCJi53aUGiBD72qXvOO5PgJe3Rcg3m/ofHoVwp7+yhRZrGr
7pIGA39d48kHPh4p/pE9NVFYr2IrPk9FAL/44sME2JZpD9gDkxrL/DXlgWU7
L05+4AfsWSkN2fpV5VnPaUiq5rkyK9Aojo2KbcGvKA/8m3+FiLK7dd0VDUni
7Z8qHn7zo/dNd0nXwh69oCFJv6zx6L/UIIPmkgt3bzpuatRc0mr6+rMCST7y
DJY+n4+AulrgnCJWHKZVFfF85eMJK300q7bVLWks/XMaj/7jh2V3Z9Kwhgjd
sobQaWE+/GFBnD5Kg+njGXl1K2opxB/8/ac13vCf/xXEYU3nulyBOMrieZ6g
iq5+72Hi7MzXz7Pnr7JnqYTyGY3n/+7OS5efT7/M7LluTYOvT2k8ms1D/hgp
KP06AyzSvaXBVJ6yq0Kif6+my0fLO0PO0b2t5qq8gb0ar/i1jyaNwlUWtelu
sMeorMzjGo/+ZQ3SbL90FhrrNjRYqnWM+G8KW/yoUzP6eJaF6N7RYKvW4fJn
diaLSthZrqfLqx9DjcwujUc/pWbqR1OGnbzq3tVY+ic0nv+4mjIfaQnYZS0/
HtqjkknyS45r9mxPkOIUkz6RtYHwGOSZYimUNRv/4uNLNbsz091mS5DlDn+2
1eK/4zL4yP8PWaiyMA==\
\>"],ExpressionUUID->"e7446cb3-82e9-4806-a09b-04430fb2c20f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Transformations", "Subtitle",
 CellChangeTimes->{{3.8137454113682814`*^9, 
  3.813745423299766*^9}},ExpressionUUID->"2cf855e4-34c9-47ef-89da-\
f488cde6be96"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"identity", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rotate90", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hflip", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stretchx", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shrinkx", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stretchy", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stretchxy", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sheary", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shearx", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shrink", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeTGrid", "[", 
   RowBox[{"t_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.01", "]"}], ",", "Thin", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"-", "10"}]}], "}"}]}], ",", 
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "10"}], "}"}]}]}], "}"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.01", "]"}], ",", "Thin", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeTGrid3d", "[", 
   RowBox[{"t_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Thin", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"-", "10"}]}], "}"}]}], ",", 
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "10"}], "}"}]}]}], "}"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Thin", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{"10", ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Thin", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"-", "10"}], ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"t", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "10", ",", 
            RowBox[{"v", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
     "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GridTransform", "[", 
   RowBox[{"t_", ",", "b1_:", ",", "b2_", ",", "vlist_", ",", "colors_", ",", 
    RowBox[{"plotrange_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MakeTGrid", "[", 
          RowBox[{"t", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"MakeSpan", "[", 
         RowBox[{"b1", ",", "b2"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MakeColorArrow", "[", 
         RowBox[{"Red", ",", 
          RowBox[{"t", ".", "b1"}]}], "]"}], ",", 
        RowBox[{"MakeColorArrow", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"t", ".", "b2"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MakeColorArrow", "[", 
          RowBox[{"#", ",", 
           RowBox[{"t", ".", "#2"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"colors", ",", "vlist"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GridTransform3d", "[", 
   RowBox[{
   "t_", ",", "b1_", ",", "b2_", ",", "b3_", ",", "vlist_", ",", "colors_", 
    ",", 
    RowBox[{"plotrange_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MakeTGrid3d", "[", 
          RowBox[{"t", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Make3dSpan", "[", 
         RowBox[{"b1", ",", "b2", ",", "b3"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Make3dColorArrow", "[", 
         RowBox[{"Red", ",", 
          RowBox[{"t", ".", "b1"}]}], "]"}], ",", 
        RowBox[{"Make3dColorArrow", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"t", ".", "b2"}]}], "]"}], ",", 
        RowBox[{"Make3dColorArrow", "[", 
         RowBox[{"Green", ",", 
          RowBox[{"t", ".", "b3"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Make3dColorArrow", "[", 
          RowBox[{"#", ",", 
           RowBox[{"t", ".", "#2"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"colors", ",", "vlist"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "plotrange"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8137450771126986`*^9, 3.813745140328258*^9}, {
  3.8137451996495376`*^9, 3.813745200660867*^9}, {3.81374523312076*^9, 
  3.81374524505188*^9}, {3.813745711217922*^9, 3.8137457207853575`*^9}, {
  3.813745754949113*^9, 3.813745758573433*^9}, {3.813745801902652*^9, 
  3.8137458273109045`*^9}, {3.8137458998685884`*^9, 
  3.8137459013456173`*^9}},ExpressionUUID->"5e7d43d5-5220-465b-a1bf-\
36126db61be5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"GridTransform", "[", 
       RowBox[{
        RowBox[{"identity", "-", 
         RowBox[{"0.02", "i", 
          RowBox[{"(", 
           RowBox[{"identity", "-", "shearx"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "0.5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Brown", ",", "Yellow", ",", "Black"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.813745194240991*^9, 3.8137451953580074`*^9}, {
   3.8137452981444263`*^9, 3.813745355749123*^9}, {3.8137456873698635`*^9, 
   3.8137456874596243`*^9}, 3.813745730126467*^9, 3.8137458320123425`*^9, {
   3.8137459036883593`*^9, 3.8137459115543365`*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"6d0cae83-ae6d-407b-b96a-55e68310ba6a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 0, 50}}, Typeset`size$$ = {576., {287., 293.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$57617$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$57617$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`GridTransform[$CellContext`identity - 
         0.02 $CellContext`i$$ ($CellContext`identity - $CellContext`shearx), \
{1, 0}, {0, 1}, {{1, 1}, {2, 1}, {-2, -0.5}, {1, -2}}, {
         Green, Brown, Yellow, Black}, {{-4, 4}, {-4, 4}}], ImageSize -> 
        Large], "Specifications" :> {{$CellContext`i$$, 0, 50}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{627., {334., 340.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.81374520430027*^9, {3.813745311934203*^9, 3.813745356312619*^9}, {
   3.8137459043655453`*^9, 3.813745912169694*^9}},
 CellLabel->
  "Out[330]=",ExpressionUUID->"ed429810-3d44-4835-8a05-6385ac22cb88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"GridTransform3d", "[", 
      RowBox[{
       RowBox[{"Identity3", "-", 
        RowBox[{"0.02", "i", 
         RowBox[{"(", 
          RowBox[{"Identity3", "-", 
           TagBox[
            RowBox[{"(", "\[NoBreak]", GridBox[{
               {"1", "0", "1"},
               {"0", "1", "0"},
               {"1", "0", "1"}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.7]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}}], "\[NoBreak]", ")"}],
            Function[BoxForm`e$, 
             MatrixForm[BoxForm`e$]]]}], ")"}]}]}], ",", "b1", ",", "b2", ",",
        "b3", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0", ",", "1"}], "}"}], "}"}], ",", 
       RowBox[{"{", "Brown", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8137459708267374`*^9, 3.8137459746734643`*^9}, {
  3.8137460149450665`*^9, 3.813746145871786*^9}, {3.8137461884534006`*^9, 
  3.813746378161256*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"f4a838a0-5ae5-4ef7-a9b1-c6faa09507fe"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 0, 50}}, Typeset`size$$ = {576., {308., 312.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$67366$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$67366$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`GridTransform3d[$CellContext`Identity3 - 
         0.02 $CellContext`i$$ ($CellContext`Identity3 - {{1, 0, 1}, {0, 1, 
          0}, {1, 0, 
          1}}), $CellContext`b1, $CellContext`b2, $CellContext`b3, {{2, 0, 
         1}}, {Brown}, {{-6, 6}, {-6, 6}, {-6, 6}}], ImageSize -> Large], 
      "Specifications" :> {{$CellContext`i$$, 0, 50}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {354., 360.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8137460231792135`*^9, 3.813746115266246*^9}, 
   3.813746146373414*^9, {3.813746252353258*^9, 3.813746268186697*^9}, {
   3.813746301419898*^9, 3.813746378736718*^9}},
 CellLabel->
  "Out[398]=",ExpressionUUID->"abbfe1e6-6b76-4574-8c26-f59750f365c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", 
      RowBox[{"-", "3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "}"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8137459927655344`*^9, 3.8137460089081964`*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"6d9557d0-ae0f-48f8-8b66-886a7919cbb3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "2", 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "2"}], "1", "0"},
     {"0", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8137460092233925`*^9},
 CellLabel->
  "Out[332]//MatrixForm=",ExpressionUUID->"f54b1581-fbe2-4b48-9564-\
99efb21bf58f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</stretchx/\>\"", "<>", 
        RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<.png\>\""}], ",", 
       "#", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "100"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GridTransform", "[", 
           RowBox[{
            RowBox[{"identity", "-", 
             RowBox[{"0.02", "i", 
              RowBox[{"(", 
               RowBox[{"identity", "-", 
                RowBox[{"(", GridBox[{
                   {"2", "0"},
                   {"0", "1"}
                  }], ")"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "0.5"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "Green", ",", " ", "Brown", ",", "Yellow", ",", "Black"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}]}], "}"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</stretchy/\>\"", "<>", 
        RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<.png\>\""}], ",", 
       "#", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "100"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GridTransform", "[", 
           RowBox[{
            RowBox[{"identity", "-", 
             RowBox[{"0.02", "i", 
              RowBox[{"(", 
               RowBox[{"identity", "-", 
                RowBox[{"(", GridBox[{
                   {"1", "0"},
                   {"0", "2"}
                  }], ")"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "0.5"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "Green", ",", " ", "Brown", ",", "Yellow", ",", "Black"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}]}], "}"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</shearx/\>\"", "<>", 
        RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<.png\>\""}], ",", 
       "#", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "100"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GridTransform", "[", 
           RowBox[{
            RowBox[{"identity", "-", 
             RowBox[{"0.02", "i", 
              RowBox[{"(", 
               RowBox[{"identity", "-", 
                RowBox[{"(", GridBox[{
                   {"1", "1"},
                   {"0", "1"}
                  }], ")"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "0.5"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "Green", ",", " ", "Brown", ",", "Yellow", ",", "Black"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}]}], "}"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</sheary/\>\"", "<>", 
        RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<.png\>\""}], ",", 
       "#", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "100"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GridTransform", "[", 
           RowBox[{
            RowBox[{"identity", "-", 
             RowBox[{"0.02", "i", 
              RowBox[{"(", 
               RowBox[{"identity", "-", 
                RowBox[{"(", GridBox[{
                   {"1", "0"},
                   {"1", "1"}
                  }], ")"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "0.5"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "Green", ",", " ", "Brown", ",", "Yellow", ",", "Black"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}]}], "}"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</flipx/\>\"", "<>", 
        RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<.png\>\""}], ",", 
       "#", ",", 
       RowBox[{"ImageResolution", "\[Rule]", " ", "100"}]}], "]"}], "&"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GridTransform", "[", 
           RowBox[{
            RowBox[{"identity", "-", 
             RowBox[{"0.02", "i", 
              RowBox[{"(", 
               RowBox[{"identity", "-", 
                RowBox[{"(", GridBox[{
                   {"1", "0"},
                   {"0", 
                    RowBox[{"-", "1"}]}
                  }], ")"}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", 
                RowBox[{"-", "0.5"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "Green", ",", " ", "Brown", ",", "Yellow", ",", "Black"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "50"}], "}"}]}], "]"}]}], "}"}]}], "]"}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.8137466703390317`*^9, 3.8137467900252533`*^9}, {
  3.81374682018267*^9, 3.8137468359056935`*^9}, {3.8137469003265953`*^9, 
  3.8137469181100817`*^9}},ExpressionUUID->"6e2a73c7-f43f-4bbc-bfff-\
39024005c750"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 998},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 272, 4, 96, "Title",ExpressionUUID->"0a470bca-ec75-42d8-9ccc-1ca90d6041b6"],
Cell[855, 28, 277, 4, 53, "Subtitle",ExpressionUUID->"cf8c79f0-c5b4-43a9-8484-9917d4f52bb0"],
Cell[1135, 34, 366, 5, 34, "Text",ExpressionUUID->"ca2435d6-d63f-45b1-8ee0-491bf56b8bd1"],
Cell[1504, 41, 323, 9, 44, "Input",ExpressionUUID->"e0236693-0af7-49fb-9555-fb5ae2c35804"],
Cell[1830, 52, 157, 3, 34, "Text",ExpressionUUID->"c46f25d3-69a8-44fe-a87d-a110eb88768c"],
Cell[1990, 57, 305, 10, 78, "Input",ExpressionUUID->"d4de36ca-9bf9-49f3-b85d-7bc8384b13a9"],
Cell[2298, 69, 220, 5, 34, "Text",ExpressionUUID->"2ca12b40-bb18-43dd-8643-6effd24f0f9e"],
Cell[CellGroupData[{
Cell[2543, 78, 908, 25, 61, "Input",ExpressionUUID->"43096d7c-001d-45e8-af6a-75a8707b6d98"],
Cell[3454, 105, 670, 14, 47, "Output",ExpressionUUID->"7796b4e4-9eac-4742-9241-45006fe2a315"]
}, Open  ]],
Cell[4139, 122, 217, 5, 34, "Text",ExpressionUUID->"88b2cc3b-9c84-4ccc-aa1a-616f799c7f1a"],
Cell[CellGroupData[{
Cell[4381, 131, 5335, 143, 112, "Input",ExpressionUUID->"329e3318-e701-4c79-ac65-d41b7c07578b"],
Cell[9719, 276, 779, 15, 37, "Output",ExpressionUUID->"fe14e042-0e13-4358-bb57-36b7dc9b1638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10535, 296, 249, 5, 28, "Input",ExpressionUUID->"7d19d02f-5adb-4992-abce-cf72963a4d4b"],
Cell[10787, 303, 175, 2, 32, "Output",ExpressionUUID->"2018e7e0-9bc0-426e-8a39-2d61c97f1e37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10999, 310, 220, 4, 53, "Subtitle",ExpressionUUID->"d6306237-f141-455b-9865-0c702c71211c"],
Cell[11222, 316, 200, 4, 34, "Text",ExpressionUUID->"415227d2-68ab-4459-9dc0-1d8971e9bdb6"],
Cell[CellGroupData[{
Cell[11447, 324, 1078, 34, 119, "Input",ExpressionUUID->"eada50e4-d507-44ab-93a4-fcf86719cbac"],
Cell[12528, 360, 1189, 34, 79, "Output",ExpressionUUID->"134b06ea-c69b-459f-89c3-3129e7db1698"],
Cell[13720, 396, 862, 25, 79, "Output",ExpressionUUID->"350dd24c-cb0b-4e81-8374-d2f9a1bd09b8"]
}, Open  ]],
Cell[14597, 424, 206, 4, 34, "Text",ExpressionUUID->"60667f76-7287-48d9-b140-1da8ca8b7ca6"],
Cell[CellGroupData[{
Cell[14828, 432, 816, 28, 119, "Input",ExpressionUUID->"70a635be-31fd-4878-8bb2-df137a065267"],
Cell[15647, 462, 1228, 36, 62, "Output",ExpressionUUID->"708f8f73-74a4-411d-a1d1-414c80fdf24c"],
Cell[16878, 500, 694, 21, 62, "Output",ExpressionUUID->"6038fe9b-1c80-4712-8ce8-30796bcb0cf7"]
}, Open  ]],
Cell[17587, 524, 200, 4, 34, "Text",ExpressionUUID->"b47d6938-6ef9-4c65-9d0e-557d2480d9d6"],
Cell[17790, 530, 736, 23, 177, "Input",ExpressionUUID->"2085bad9-ed15-41cb-b99a-5fa4fe90c91d"],
Cell[CellGroupData[{
Cell[18551, 557, 560, 17, 81, "Input",ExpressionUUID->"88f692e3-b2b9-4cb5-b0a7-491b8d6c07c9"],
Cell[19114, 576, 700, 20, 62, "Output",ExpressionUUID->"e8fa1bd4-a4b5-48ed-a960-9d7c2491d1be"],
Cell[19817, 598, 726, 22, 62, "Output",ExpressionUUID->"4478e1fa-dd85-4448-a7b9-044ae2045ab7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20580, 625, 842, 24, 61, "Input",ExpressionUUID->"b5ba37fe-817e-42e8-aa6b-b1c4fe1329fd"],
Cell[21425, 651, 757, 23, 79, "Output",ExpressionUUID->"26b67bc2-c4c4-488d-9458-ab680b3c664b"]
}, Open  ]],
Cell[22197, 677, 206, 4, 34, "Text",ExpressionUUID->"6d2d413f-fd16-46cf-9baa-2af5dabb92ce"],
Cell[CellGroupData[{
Cell[22428, 685, 1075, 32, 100, "Input",ExpressionUUID->"90bde4cf-6297-4d16-9f6c-81cd8284545d"],
Cell[23506, 719, 791, 25, 96, "Output",ExpressionUUID->"84eb15c2-80cb-4c2a-9465-a4fa96183a6d"],
Cell[24300, 746, 730, 23, 79, "Output",ExpressionUUID->"47fcf3c0-c305-4601-87f7-3adb3e3cdff3"]
}, Open  ]],
Cell[25045, 772, 206, 4, 34, "Text",ExpressionUUID->"6404eb45-1d08-4f47-8aa8-2cdac1d1c084"],
Cell[CellGroupData[{
Cell[25276, 780, 1850, 58, 157, "Input",ExpressionUUID->"dac89213-33ec-4ef0-af3d-720edf38760a"],
Cell[27129, 840, 818, 25, 96, "Output",ExpressionUUID->"65c70c8d-518e-4fb0-923c-223fac48a0ee"],
Cell[27950, 867, 818, 25, 96, "Output",ExpressionUUID->"4976dcd2-cde7-42ea-bc8c-3e8cfc66e65b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28817, 898, 217, 4, 53, "Subtitle",ExpressionUUID->"8e209437-633a-4424-90d4-785be1880d1b"],
Cell[29037, 904, 199, 4, 34, "Text",ExpressionUUID->"53e1c566-004f-4e16-ad42-6aa4b5075371"],
Cell[CellGroupData[{
Cell[29261, 912, 5766, 171, 367, "Input",ExpressionUUID->"97cfc23b-d535-4244-b174-0a9d020b2b3c"],
Cell[35030, 1085, 1093, 20, 597, "Output",ExpressionUUID->"184f64a6-516c-43fe-ac45-5e3bfa5752c2"]
}, Open  ]],
Cell[36138, 1108, 168, 3, 28, "Input",ExpressionUUID->"228a9c1c-c550-4874-a3a6-e0fb08abc072"],
Cell[CellGroupData[{
Cell[36331, 1115, 3663, 110, 197, "Input",ExpressionUUID->"4ede6810-c593-4eee-a6a3-136674e14b0e"],
Cell[39997, 1227, 1360, 27, 438, "Output",ExpressionUUID->"ef3e3db2-7ade-46fa-a35f-f5985473c69d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41394, 1259, 4650, 136, 235, "Input",ExpressionUUID->"1e4ba58a-809e-4de9-8778-826ea2026462"],
Cell[46047, 1397, 1175, 25, 476, "Output",ExpressionUUID->"2052ecc8-4780-4dbb-9fd0-3a9b9a354d21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47259, 1427, 2443, 68, 140, "Input",ExpressionUUID->"30be749e-ec0b-458e-b084-d3a81f64d068"],
Cell[49705, 1497, 1132, 26, 515, "Output",ExpressionUUID->"2034ed87-2095-43d8-82d2-d7179e0c5b4a"]
}, Open  ]],
Cell[50852, 1526, 206, 4, 34, "Text",ExpressionUUID->"beb8b9ea-0ece-444d-bdd5-338bed67cac7"],
Cell[CellGroupData[{
Cell[51083, 1534, 2300, 67, 153, "Input",ExpressionUUID->"655792af-c562-4d37-8fd8-82f0c740bb66"],
Cell[53386, 1603, 1939, 37, 813, "Output",ExpressionUUID->"a6a2ec64-754d-42c0-ae07-b02183754401"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55362, 1645, 1830, 56, 83, "Input",ExpressionUUID->"c1a92e25-154e-4560-a058-6880da4affa6"],
Cell[57195, 1703, 1891, 37, 317, "Output",ExpressionUUID->"d51285cf-38de-4cfb-b5ab-b730e9f5d3ec"]
}, Open  ]],
Cell[59101, 1743, 246, 5, 34, "Text",ExpressionUUID->"822f2463-c411-4ec6-83bb-c871455565f5"],
Cell[CellGroupData[{
Cell[59372, 1752, 1416, 43, 83, "Input",ExpressionUUID->"e640b8cd-ba4a-4515-b9b5-210b46f7075d"],
Cell[60791, 1797, 479, 10, 597, "Output",ExpressionUUID->"0ec8aa16-4bf8-4957-ae28-0bd67fe2f4f6"]
}, Open  ]],
Cell[61285, 1810, 131, 3, 28, "Input",ExpressionUUID->"f2f35c6a-f0a6-46a3-8c33-c384a584d5b2"],
Cell[CellGroupData[{
Cell[61441, 1817, 1892, 59, 121, "Input",ExpressionUUID->"bb626894-e0ca-44ec-a7cb-28f9b57cbf34"],
Cell[63336, 1878, 823, 17, 559, "Output",ExpressionUUID->"13c563b1-434d-44c8-a33e-5652c536f81f"]
}, Open  ]],
Cell[64174, 1898, 221, 4, 34, "Text",ExpressionUUID->"00491a66-e955-43f8-934b-71f0ed140f3e"],
Cell[CellGroupData[{
Cell[64420, 1906, 1097, 35, 74, "Input",ExpressionUUID->"7e218aa9-43a1-4f88-8462-77ad9eff073b"],
Cell[65520, 1943, 2120, 42, 505, "Output",ExpressionUUID->"be2570fa-4f0a-4021-b3e7-baa81b5a3b5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67677, 1990, 6794, 182, 286, "Input",ExpressionUUID->"937c40fc-d72b-4409-9081-4ceca8c51d06"],
Cell[74474, 2174, 2844, 52, 795, "Output",ExpressionUUID->"b752901f-a606-4f44-a4fb-57a298725210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77355, 2231, 3134, 94, 169, "Input",ExpressionUUID->"97f217f6-db24-4ee0-96c3-70b14c03f9cd"],
Cell[80492, 2327, 2513, 49, 773, "Output",ExpressionUUID->"8eb45153-5452-4cda-be47-17703e745d0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83042, 2381, 5140, 159, 267, "Input",ExpressionUUID->"205097fc-d683-43c4-9aa5-e23b3735465e"],
Cell[88185, 2542, 3905, 71, 707, "Output",ExpressionUUID->"2202dca4-e6ab-4ddb-8d12-25f703c121bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92127, 2618, 587, 23, 61, "Input",ExpressionUUID->"42f598f4-e267-41bf-8a5c-757bea2fe978"],
Cell[92717, 2643, 198150, 3255, 642, 4337, 77, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e7446cb3-82e9-4806-a09b-04430fb2c20f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290916, 5904, 170, 3, 53, "Subtitle",ExpressionUUID->"2cf855e4-34c9-47ef-89da-f488cde6be96"],
Cell[291089, 5909, 9653, 296, 428, "Input",ExpressionUUID->"5e7d43d5-5220-465b-a1bf-36126db61be5"],
Cell[CellGroupData[{
Cell[300767, 6209, 1794, 48, 86, "Input",ExpressionUUID->"6d0cae83-ae6d-407b-b96a-55e68310ba6a"],
Cell[302564, 6259, 1996, 40, 693, "Output",ExpressionUUID->"ed429810-3d44-4835-8a05-6385ac22cb88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304597, 6304, 2300, 64, 182, "Input",ExpressionUUID->"f4a838a0-5ae5-4ef7-a9b1-c6faa09507fe"],
Cell[306900, 6370, 2077, 41, 733, "Output",ExpressionUUID->"abbfe1e6-6b76-4574-8c26-f59750f365c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309014, 6416, 499, 15, 28, "Input",ExpressionUUID->"6d9557d0-ae0f-48f8-8b66-886a7919cbb3"],
Cell[309516, 6433, 699, 22, 79, "Output",ExpressionUUID->"f54b1581-fbe2-4b48-9564-99efb21bf58f"]
}, Open  ]],
Cell[310230, 6458, 10285, 290, 479, "Input",ExpressionUUID->"6e2a73c7-f43f-4bbc-bfff-39024005c750"]
}, Open  ]]
}, Open  ]]
}
]
*)

